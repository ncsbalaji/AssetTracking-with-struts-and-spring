<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">


<beans>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
  
	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"><value>/WEB-INF/jdbc.properties</value></property>
	</bean>

	<!-- Local DataSource that works in any environment -->
	<!-- Note that DriverManagerDataSource does not pool; it is not intended for production -->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>${jdbc.driverClassName}</value></property>
		<property name="url"><value>${jdbc.url}</value></property>
		<property name="username"><value>${jdbc.username}</value></property>
		<property name="password"><value>${jdbc.password}</value></property>

	</bean>
	

	<!-- JNDI DataSource for J2EE environments -->

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource"><ref local="dataSource"/></property>
		<property name="mappingResources">
		<list>
			<value>com/infotech/hibernate/Login.hbm.xml</value>
			<value>com/infotech/hibernate/Assetdetails.hbm.xml</value>
			<value>com/infotech/hibernate/Role.hbm.xml</value>
			<value>com/infotech/hibernate/Assettype.hbm.xml</value>
			<value>com/infotech/hibernate/Location.hbm.xml</value>
			</list>
		</property>
			<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>


	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
		
	</bean>


	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--
	 Data access object: Hibernate implementation.
    -->

	<bean id="LoginDaoTarget" class="com.infotech.hibernate.dao.impl.LoginDAOImpl">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>
	<bean id="AssetDetailsDaoTarget" class="com.infotech.hibernate.dao.impl.AssetDetailsDAOImpl">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>
	<bean id="AdminDaoTarget" class="com.infotech.hibernate.dao.impl.AdminDAOImpl">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>
	

	<!--
		- Transactional proxy for Login Application central data access object.
		-
		- Defines specific transaction attributes with "readOnly" markers,
		- which is an optimization that is particularly valuable with Hibernate
		- (to suppress unnecessary flush attempts for read-only operations).
		-
		- Note that in a real-life app with multiple transaction proxies,
		- you will probably want to use parent and child bean definitions
		- as described in the manual, to reduce duplication.
    -->

	<bean id="LoginDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="LoginDaoTarget"/></property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<bean id="AssetDetailsDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="AssetDetailsDaoTarget"/></property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	<bean id="AdminDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="AdminDaoTarget"/></property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="store*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
</beans>
